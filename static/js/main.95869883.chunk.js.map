{"version":3,"sources":["styledutils.js","my-theme.js","Scoreboard.js","Card.js","CardContainer.js","InstructionsModal.js","pokeball.png","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","props","theme","backgroundColor","colors","main","AppWrapper","Button","button","PlayAgainButton","myTheme","borderRadius","secondary","ScoreDisplay","p","Scoreboard","score","CardWrapper","Card","clickHandler","pokemon","onClick","src","images","small","alt","Container","section","CardContainer","cards","map","card","name","id","Modal","Dialog","InstructionsModal","toggleModal","App","useState","setCards","displayedCards","setDisplayedCards","previousSelections","setPreviousSelections","setScore","isLoser","setIsLoser","displayModal","setDisplayModal","isInitialMount","useRef","useEffect","axios","get","process","REACT_API_KEY","then","res","data","current","cardsToDisplay","i","newCard","Math","floor","random","length","some","push","handleModal","e","className","style","display","alignItems","height","pokeball","selection","color","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEaA,EAASC,IAAOC,IAAV,0dAOC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,mBAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOC,QAwBxBC,EAAaP,IAAOC,IAAV,4NACF,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,mBAY7BI,EAASR,IAAOS,OAAV,iOAMC,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,mBAEhC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOC,QAKxBI,EAAkBV,IAAOS,OAAV,wQASnB,SAAAP,GAAK,OAAIA,EAAMC,MAAME,OAAOC,QCrE/BK,G,MAAU,CACdC,aAAc,MACdR,gBAAiB,UACjBC,OAAQ,CACNC,KAAM,QACNO,UAAW,a,OCFTC,EAAed,IAAOe,EAAV,6DAET,SAAAb,GAAK,OAAIA,EAAMC,MAAME,OAAOC,QAEtB,SAASU,EAAT,GAAgC,IAAVC,EAAS,EAATA,MACnC,OACE,8BACE,eAACH,EAAD,qBAAsBG,OCP5B,I,EAAMC,EAAclB,IAAOC,IAAV,yUAuBF,SAASkB,EAAT,GAA0C,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QAC3C,OACE,cAACH,EAAD,UACE,qBAAKI,QAAS,kBAAMF,EAAaC,IAAUE,IAAKF,EAAQG,OAAOC,MAAOC,IAAI,OCzBhF,IAAMC,EAAY3B,IAAO4B,QAAV,4NAaA,SAASC,EAAT,GAAiD,IAAxBT,EAAuB,EAAvBA,aAAcU,EAAS,EAATA,MACpD,OACE,cAACH,EAAD,UACGG,EAAMC,KAAI,SAAAC,GAAI,OAAI,cAACb,EAAD,CAAMC,aAAcA,EAA8CC,QAASW,GAA3E,UAA0CA,EAAKC,KAA/C,YAAuDD,EAAKE,U,yBChB/EC,G,MAAQnC,IAAOC,IAAV,8KAWLmC,EAASpC,IAAOC,IAAV,yUAiBG,SAASoC,EAAT,GAA6C,IAAhBC,EAAe,EAAfA,YAC1C,OACE,cAACH,EAAD,CAAOb,QAASgB,EAAhB,SACE,eAACF,EAAD,WACE,8CACA,sTCrCO,UAA0B,qCCgG1BG,MAnFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAE+BD,mBAAS,IAFxC,mBAENE,EAFM,KAEUC,EAFV,OAGuCH,mBAAS,IAHhD,mBAGNI,EAHM,KAGcC,EAHd,OAIaL,mBAAS,GAJtB,mBAINvB,EAJM,KAIC6B,EAJD,OAKiBN,oBAAS,GAL1B,mBAKNO,EALM,KAKGC,EALH,OAM2BR,oBAAS,GANpC,mBAMNS,EANM,KAMQC,EANR,KAQPC,EAAiBC,kBAAO,GAE9BC,qBAAU,WACRC,IAAMC,IAAI,kDAAmD,CAC3D,YAAaC,+IAAYC,gBAExBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKA,QACrBF,MAAK,SAAAE,GAAI,OAAInB,EAASmB,QACxB,IAGHP,qBAAU,WACR,GAAIF,EAAeU,QACjBV,EAAeU,SAAU,MACpB,CAEL,IADA,IAAMC,EAAiB,GADlB,WAEIC,GAEP,IADA,IAAIC,EAAUlC,EAAMmC,KAAKC,MAAMD,KAAKE,SAAWrC,EAAMsC,SAC9CN,EAAeO,MAAK,SAAArC,GAAI,OAAIA,EAAKE,KAAO8B,EAAQ9B,IAAMF,EAAKC,OAAS+B,EAAQ/B,SACjF+B,EAAUlC,EAAMmC,KAAKC,MAAMD,KAAKE,SAAWrC,EAAMsC,SAEnDN,EAAeQ,KAAKN,IALbD,EAAI,EAAGA,EAAI,EAAGA,IAAM,IAO7BpB,EAAkBmB,MAGnB,CAAChC,EAAOc,IAEX,IAAM2B,EAAc,SAACC,GACnBtB,GAAiBD,IAmBnB,OACE,cAAC,IAAD,CAAe9C,MAAOQ,EAAtB,SACE,eAACJ,EAAD,CAAYkE,UAAU,MAAtB,UACE,eAAC1E,EAAD,WACE,cAACS,EAAD,CAAQc,QAASiD,EAAjB,0BACA,sBAAKG,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,UACE,gDACA,qBAAKF,MAAO,CAAEG,OAAQ,OAAQF,QAAS,UAAYpD,IAAKuD,EAAUpD,IAAI,gBAGxE,cAACV,EAAD,CAAYC,MAAOA,QAEnB8B,GACA,cAAClB,EAAD,CAAeT,aA5BH,SAACC,GACfuB,EAAmByB,MAAK,SAAAU,GAAS,OAAI1D,EAAQa,KAAO6C,EAAU7C,IAAMb,EAAQY,OAAS8C,EAAU9C,SACjGe,GAAW,GACXH,EAAsB,MAEtBA,EAAsB,GAAD,mBAAKD,GAAL,CAAyBvB,KAC9CyB,EAAS7B,EAAQ,KAsB6Ba,MAAOY,IAElDK,GACC,gCACE,oBAAI2B,MAAO,CAAEM,MAAO,SAApB,uBACA,cAACtE,EAAD,CAAiB+D,UAAU,aAAaQ,KAAK,SAAS3D,QAvB5C,WAClB0B,GAAW,GACXF,EAAS,IAqBD,4BAEHG,GAAgB,cAACZ,EAAD,CAAmBC,YAAaiC,UC7E1CW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95869883.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-between;\nmax-width: 100%;\n\nbackground-color: ${props => props.theme.backgroundColor};\ncolor: ${props => props.theme.colors.main};\nheight: 15vh;\nfont-weight: 600;\nfont-size: 1.5rem;\ntext-align: center;\npadding: 16px;\n@media(max-width:375px){\n  flex-direction: column;\n  justify-content: space-around;\n  div {\n    order: 1;\n  }\n  h1 {\n    font-size: 24px;\n    margin: 0;\n  }\n  button {\n    order: 2\n  }\n\n\n}\n`\n\nexport const AppWrapper = styled.div`\n background-color: ${props => props.theme.backgroundColor};\n min-height: 100vh;\n max-height: 85vh;\n width: 100vw;\n\n @media(max-width: 375px){\n   display: grid;\n   grid-template-rows: auto auto;\n   max-height: none;\n }\n`\n\nexport const Button = styled.button`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nheight: 16px;\njustify-content: center;\nbackground-color: ${props => props.theme.backgroundColor};\nborder: none;\ncolor: ${props => props.theme.colors.main};\nfont-size: 1.5rem;\ntext-align: center;\n`\n\nexport const PlayAgainButton = styled.button`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nheight: 32px;\njustify-content: center;\nbackground-color: grey;\nborder: none;\nborder-radius: 5px;\ncolor: ${props => props.theme.colors.main};\nfont-size: 1.5rem;\ntext-align: center;\nmargin: 0 auto;\n`","const myTheme = {\n  borderRadius: '5px',\n  backgroundColor: '#403e3e',\n  colors: {\n    main: 'white',\n    secondary: 'magenta',\n  },\n};\n\nexport { myTheme };","import React from 'react'\nimport styled from 'styled-components'\n\nconst ScoreDisplay = styled.p`\nfont-size: 1.5rem;\ncolor: ${props => props.theme.colors.main};\n`\nexport default function Scoreboard({ score }) {\n  return (\n    <div>\n      <ScoreDisplay>Score: {score}</ScoreDisplay>\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst CardWrapper = styled.div`\nflex-grow: 1;\nheight: fit-content;\nwidth: fit-content;\nmargin: 0 auto;\npadding: 0;\n  img {\n    max-height: 300px;\n    &:hover {\n    transform: scale(1.1);\n    transition: all .5s;\n    margin: 0;\n    padding: 0;\n  }\n\n  @media(max-width:375px){\n  max-width: 135px;\n  margin: 0;\n}\n\n}\n`\n\nexport default function Card({ clickHandler, pokemon }) {\n  return (\n    <CardWrapper>\n      <img onClick={() => clickHandler(pokemon)} src={pokemon.images.small} alt=\"\" />\n    </CardWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport Card from './Card';\n\nconst Container = styled.section`\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr);\ngrid-gap: 24px;\nwidth: 100vw;\nheight: 100%;\n\n@media(max-width:375px){\n  grid-template-columns: repeat(2, 50%);\n  grid-gap: 0;\n}\n`\n\nexport default function CardContainer({ clickHandler, cards }) {\n  return (\n    <Container>\n      {cards.map(card => <Card clickHandler={clickHandler} key={`${card.name}-${card.id}`} pokemon={card} />)}\n    </Container>\n  )\n}\n","import styled from 'styled-components';\n\nimport React from 'react'\n\nconst Modal = styled.div`\n  z-index: 10;\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0,0,0, .8);\n  width: 100vw;\n  height: 100vh;\n`\n\nconst Dialog = styled.div`\n  background-color: #424040;\n  position: relative;\n  z-index: 20;\n  width: auto;\n  max-width: 50vw;\n  height:auto;\n  color: white;\n  margin: 0 auto;\n  margin-top: 10%;\n  padding: 16px;\n  border-radius: 20px;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: 30% 70%;\n`\n\nexport default function InstructionsModal({ toggleModal }) {\n  return (\n    <Modal onClick={toggleModal}>\n      <Dialog>\n        <h1>Instructions</h1>\n        <p>The goal of the game is to select as many cards as you can without selecting any given card more than once. HINT: Don't just focus on the Pokemon's name! Some Pokemon have many different kinds of cards with different art or types, so be careful to remember those details! </p>\n      </Dialog>\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/pokeball.9fc0eeae.png\";","import React, { useEffect, useState, useRef } from 'react';\nimport { Header, AppWrapper, Button, PlayAgainButton } from './styledutils'\nimport './App.css';\nimport { ThemeProvider } from 'styled-components';\nimport { myTheme } from './my-theme'\nimport Scoreboard from './Scoreboard';\nimport CardContainer from './CardContainer'\nimport axios from 'axios';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport InstructionsModal from './InstructionsModal'\nimport pokeball from './pokeball.png'\n\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [displayedCards, setDisplayedCards] = useState([])\n  const [previousSelections, setPreviousSelections] = useState([])\n  const [score, setScore] = useState(0);\n  const [isLoser, setIsLoser] = useState(false);\n  const [displayModal, setDisplayModal] = useState(false);\n\n  const isInitialMount = useRef(true)\n\n  useEffect(() => {\n    axios.get('https://api.pokemontcg.io/v2/cards?pageSize=100', {\n      \"x-api-key\": process.env.REACT_API_KEY\n    })\n      .then(res => res.data.data)\n      .then(data => setCards(data))\n  }, [])\n\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      const cardsToDisplay = []\n      for (let i = 0; i < 8; i++) {\n        let newCard = cards[Math.floor(Math.random() * cards.length)]\n        while (cardsToDisplay.some(card => card.id === newCard.id && card.name === newCard.name)) {\n          newCard = cards[Math.floor(Math.random() * cards.length)]\n        }\n        cardsToDisplay.push(newCard)\n      }\n      setDisplayedCards(cardsToDisplay)\n    }\n\n  }, [cards, previousSelections])\n\n  const handleModal = (e) => {\n    setDisplayModal(!displayModal)\n  }\n\n\n  const handleClick = (pokemon) => {\n    if (previousSelections.some(selection => pokemon.id === selection.id && pokemon.name === selection.name)) {\n      setIsLoser(true)\n      setPreviousSelections([])\n    } else {\n      setPreviousSelections([...previousSelections, pokemon])\n      setScore(score + 1)\n    }\n  }\n\n  const restartGame = () => {\n    setIsLoser(false)\n    setScore(0)\n  }\n\n  return (\n    <ThemeProvider theme={myTheme}>\n      <AppWrapper className=\"App\">\n        <Header>\n          <Button onClick={handleModal}>Instructions</Button>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <h1>Pokémemory!</h1>\n            <img style={{ height: \"36px\", display: \"inline\" }} src={pokeball} alt=\"Pokeball\" />\n          </div>\n\n          <Scoreboard score={score} />\n        </Header>\n        {!isLoser &&\n          <CardContainer clickHandler={handleClick} cards={displayedCards} />\n        }\n        {isLoser && (\n          <div>\n            <h2 style={{ color: \"white\" }}>You lost!</h2>\n            <PlayAgainButton className=\"play-again\" type=\"button\" onClick={restartGame}>Play Again?</PlayAgainButton>\n          </div>)}\n        {displayModal && <InstructionsModal toggleModal={handleModal} />}\n\n      </AppWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}